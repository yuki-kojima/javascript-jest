
# 問題
1から100までの数をプリントするプログラムをかけ。
ただし、
その数が3の倍数のときは、その数の代わりに「Fizz」を出力する
その数が5の倍数のときは、その数の代わりに「Buzz」を出力する
その数が3と5両方の倍数のときは、その数の代わりに「FizzBuzz」を出力する

---- 

# 問題を分割する

- [x] 数を文字列に変換する
  - [x] 1を渡すと文字列"1"を返す -> 仮実装
  - [x] 2を渡すと文字列"2"を返す ->  三角測量  これはテスト実装後削除しても良い。テスト実装者以外が見た場合に、このテストだけ2つあることが何か意味があると思われてしまう（実際は三角測量をしただけなのに）
- [x] その数が3の倍数のときは、その数の代わり「Fizz」に変換する
  - [x] 3を渡と文す字列"Fizz"を返す -> 仮実装 -> 実装 ※三角測量を必ずしも経由しなくても良い
- [x] その数が5の倍数のときは、その数の代わりに「Buzz」に変換する
  - [x] 5を渡すと文字列"Buzz"を返す ->  明白な実装（仮実装を経由せず本実装を行う）

- [ ] その数が3と5両方の倍数のときは、その数の代わりに「FizzBuzz」に変換する
  - 「出力する」のままだとテスト容易性が低いままなので、切り離すことでテスト容易性を高、重要度も高にできる

- [ ] 1からnまで
  - 100 までやったことと同じことになるnを後で考える
- [ ] 1から100まで

- [ ] プリントする
  - 標準出力の仕組みをモックしたりしないといけない。目で見たらわかるのに
  - 仕組みが複雑、壊れやすい、かけても旨味が少ない
    - viewのテストに似ている
  - テスト容易性が低い
  - 優先度下げる
